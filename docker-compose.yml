version: '3'

services:
    app:
        build:
            context: ./docker
            args:
                XDEBUG: '${XDEBUG:-on}'
        image: '${APP_NAME}-app'
        restart: unless-stopped
        container_name: '${APP_NAME}-app'
        volumes:
            - './:/var/www'
            - './docker/configs/php/conf.d/custom.ini:/usr/local/etc/php/conf.d/custom.ini'
        extra_hosts:
            - "host.docker.internal:host-gateway"
        env_file:
            - docker-compose.env
        networks:
            own-network:
                aliases:
                    - kid-group.test

    #Nginx Service https://hub.docker.com/_/nginx
    nginx:
        image: nginx:latest
        container_name: '${APP_NAME}-nginx'
        restart: unless-stopped
        ports:
            - '${APP_PORT:-80}:80'
        volumes:
            - './:/var/www'
            - './docker/configs/nginx/conf.d/:/etc/nginx/conf.d/'
        networks:
            own-network:
                aliases:
                    - kid-group.test

    redis:
        image: redis:alpine
        container_name: '${APP_NAME}-redis'
        restart: unless-stopped
        volumes:
            - ~/.docker/data/redis:/var/lib/redis:delegated
        networks:
            - own-network

    #MySQL Service https://hub.docker.com/_/mysql
    db:
        image: mysql:8.0.12
        container_name: '${APP_NAME}-db'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'own-dbdata:/var/lib/mysql'
        networks:
            - own-network
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
            retries: 3
            timeout: 5s

#Docker Networks
networks:
    own-network:
        driver: bridge

#Volumes
volumes:
    own-dbdata:
        driver: local
